{"version":3,"file":"callback.component.js","sourceRoot":"","sources":["../../../package/src/okta/components/callback.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;GAUG;;AAEH,OAAO,EAAE,SAAS,EAAU,QAAQ,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAI3D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAGhC,YAAoB,IAAqB,EAAU,MAAc,EAAsB,QAAmB;QAAtF,SAAI,GAAJ,IAAI,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAsB,aAAQ,GAAR,QAAQ,CAAW;IAAG,CAAC;IAExG,QAAQ;;YACZ,IAAI;gBACF,4GAA4G;gBAC5G,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACV,gEAAgE;gBAChE,IAAI,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAC5D,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;oBACnE,MAAM,UAAU,GAAG,YAAY,IAAI,cAAc,CAAC;oBAClD,IAAI,UAAU,EAAE;wBACd,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrC,OAAO;qBACR;iBACF;gBACD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;aAC3B;QACH,CAAC;KAAA;CACF,CAAA;AAtBY,qBAAqB;IAHjC,SAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;IAIoE,mBAAA,QAAQ,EAAE,CAAA;6CAApD,eAAe,EAAkB,MAAM,EAAiC,QAAQ;GAH/F,qBAAqB,CAsBjC;SAtBY,qBAAqB","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit, Optional, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '../services/okta.service';\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService, private router: Router, @Optional() private injector?: Injector) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.okta.handleLoginRedirect();\n    } catch (e) {\n      // Callback from social IDP. Show custom login page to continue.\n      if (this.okta.isInteractionRequiredError(e) && this.injector) {\n        const { onAuthResume, onAuthRequired } = this.okta.getOktaConfig();\n        const callbackFn = onAuthResume || onAuthRequired;\n        if (callbackFn) {\n          callbackFn(this.okta, this.injector);\n          return;\n        }\n      }\n      this.error = e.toString();\n    }\n  }\n}\n"]}